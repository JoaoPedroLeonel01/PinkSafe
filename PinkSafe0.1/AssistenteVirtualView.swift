//
//  AssistenteVirtualView.swift
//  PinkSafe0.1
//
//  Created by Joao pedro Leonel on 20/06/25.
//

import SwiftUI

struct Message: Identifiable {
    let id = UUID()
    let content: String
    let isUser: Bool
    let timestamp: Date
}

struct AssistenteVirtualView: View {
    @State private var messages: [Message] = [
        Message(content: "Ol√°! Eu sou a Luna, sua assistente virtual de seguran√ßa. Como posso ajudar voc√™ hoje?", isUser: false, timestamp: Date())
    ]
    @State private var newMessage: String = ""
    @State private var isTyping: Bool = false
    
    let sugestoes = [
        "Pontos seguros pr√≥ximos",
        "Me sinto seguida",
        "Preciso de ajuda urgente",
        "Dicas de seguran√ßa"
    ]
    
    func sendMessage(_ content: String) {
        let userMessage = Message(content: content, isUser: true, timestamp: Date())
        messages.append(userMessage)
        newMessage = ""
        
        // Simular digita√ß√£o do assistente
        isTyping = true
        
        // Simular resposta do assistente ap√≥s um breve delay
        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {
            let response = getResponse(for: content)
            let assistantMessage = Message(content: response, isUser: false, timestamp: Date())
            messages.append(assistantMessage)
            isTyping = false
        }
    }
    
    func getResponse(for message: String) -> String {
        let lowercased = message.lowercased()
        
        if lowercased.contains("seguida") || lowercased.contains("perseguida") {
            return """
            Se voc√™ suspeita que est√° sendo seguida, aqui est√£o algumas a√ß√µes imediatas que voc√™ pode tomar:

            1. Mantenha a calma
            2. Entre em um estabelecimento movimentado (lojas, bancos, restaurantes)
            3. Ligue para algu√©m de confian√ßa
            4. Se poss√≠vel, tire fotos discretamente
            5. Em caso de emerg√™ncia, ligue 190

            Quer que eu mostre os pontos seguros mais pr√≥ximos de voc√™?
            """
        } else if lowercased.contains("pontos seguros") || lowercased.contains("pr√≥ximos") {
            return """
            Posso ajudar voc√™ a encontrar pontos seguros pr√≥ximos como:
            
            - Delegacias da Mulher
            - Hospitais
            - Farm√°cias 24h
            - Postos policiais
            
            Deseja que eu mostre no mapa os pontos mais pr√≥ximos da sua localiza√ß√£o atual?
            """
        } else if lowercased.contains("ajuda") || lowercased.contains("urgente") {
            return """
            Em situa√ß√µes de emerg√™ncia:
            
            üìû Ligue imediatamente:
            - 190 (Pol√≠cia)
            - 180 (Central de Atendimento √† Mulher)
            
            üèÉ‚Äç‚ôÄÔ∏è Procure um local seguro e movimentado
            
            Quer que eu acione seus contatos de emerg√™ncia?
            """
        } else if lowercased.contains("dicas") || lowercased.contains("seguran√ßa") {
            return """
            Aqui est√£o algumas dicas importantes de seguran√ßa:

            üîπ Compartilhe sua localiza√ß√£o com pessoas de confian√ßa
            üîπ Mantenha o celular sempre carregado
            üîπ Tenha n√∫meros de emerg√™ncia na discagem r√°pida
            üîπ Evite caminhar sozinha em locais isolados
            üîπ Use nosso recurso de rastreamento em tempo real
            
            Quer saber mais sobre alguma dessas dicas?
            """
        }
        
        return "Como posso ajudar voc√™? Voc√™ pode me perguntar sobre pontos seguros pr√≥ximos, o que fazer em situa√ß√µes de emerg√™ncia, ou pedir dicas de seguran√ßa."
    }
    
    var body: some View {
        NavigationStack {
            VStack(spacing: 0) {
                // Chat messages
                ScrollView {
                    LazyVStack(spacing: 12) {
                        ForEach(messages) { message in
                            MessageBubble(message: message)
                        }
                        if isTyping {
                            TypingIndicator()
                        }
                    }
                    .padding()
                }
                
                // Primeiro divisor
                Rectangle()
                    .fill(Color.principal)
                    .frame(height: 1)
                
                // Sugest√µes
                ScrollView(.horizontal, showsIndicators: false) {
                    HStack(spacing: 10) {
                        ForEach(sugestoes, id: \.self) { sugestao in
                            Button(action: {
                                sendMessage(sugestao)
                            }) {
                                Text(sugestao)
                                    .font(.subheadline)
                                    .padding(.horizontal, 16)
                                    .padding(.vertical, 8)
                                    .background(Color.principal.opacity(0.2))
                                    .foregroundColor(.principal)
                                    .cornerRadius(20)
                            }
                        }
                    }
                    .padding()
                }
                
                // Input area
                HStack(spacing: 12) {
                    TextField("Digite sua mensagem...", text: $newMessage)
                        .padding(12)
                        .background(Color.gray.opacity(0.1))
                        .cornerRadius(25)
                    
                    Button(action: {
                        if !newMessage.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty {
                            sendMessage(newMessage)
                        }
                    }) {
                        Image(systemName: "arrow.up.circle.fill")
                            .font(.system(size: 32))
                            .foregroundColor(.principal)
                    }
                }
                .padding()
            }
            .navigationTitle("Assistente Virtual")
            .navigationBarTitleDisplayMode(.large)
        }
    }
}

struct MessageBubble: View {
    let message: Message
    
    var body: some View {
        HStack {
            if message.isUser { Spacer() }
            
            VStack(alignment: message.isUser ? .trailing : .leading, spacing: 4) {
                Text(message.content)
                    .padding(12)
                    .background(message.isUser ? Color.principal : Color.gray.opacity(0.2))
                    .foregroundColor(message.isUser ? .white : .black)
                    .cornerRadius(20)
                
                Text(message.timestamp, style: .time)
                    .font(.caption2)
                    .foregroundColor(.gray)
            }
            
            if !message.isUser { Spacer() }
        }
    }
}

struct TypingIndicator: View {
    @State private var numberOfDots = 0
    let timer = Timer.publish(every: 0.5, on: .main, in: .common).autoconnect()
    
    var body: some View {
        HStack {
            Text("Digitando")
                .foregroundColor(.gray)
            + Text(String(repeating: ".", count: numberOfDots))
                .foregroundColor(.gray)
            Spacer()
        }
        .padding(.leading)
        .onReceive(timer) { _ in
            numberOfDots = (numberOfDots + 1) % 4
        }
    }
}

#Preview {
    AssistenteVirtualView()
} 
